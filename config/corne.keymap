#define HOST_OS 2

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/36.h"
#include "zmk-helpers/unicode-chars/czech.dtsi"

#define ___ &trans

#define DEF 0
#define NUM 1
#define SYM 2
#define MED 3
#define FUN 4
#define CZE 5

/* Timeless homerow mods */

// https://github.com/urob/zmk-config/tree/main#timeless-homerow-mods
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right hand
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // thumbs

ZMK_HOLD_TAP(hmd,
    label = "Homerow Mods";
    bindings = <&kp>, <&kp>;
    tapping-term-ms = <200>;
    quick-tap-ms = <200>;
    require-prior-idle-ms = <125>;
    flavor = "balanced";
)

ZMK_HOLD_TAP(smd,
    label = "Shift Mods";
    bindings = <&kp>, <&kp>;
    tapping-term-ms = <180>;
    quick-tap-ms = <180>;
    flavor = "balanced";
)

/* Keymap */

ZMK_LAYER(def_layer,
    &kp Q                &kp W            &kp E                &kp R              &kp T         &kp Y            &kp U               &kp I                 &kp O             &kp P
    &hmd LEFT_CONTROL A  &hmd LEFT_ALT S  &hmd LEFT_COMMAND D  &smd LEFT_SHIFT F  &kp G         &kp H            &smd RIGHT_SHIFT J  &hmd RIGHT_COMMAND K  &hmd RIGHT_ALT L  &hmd RIGHT_CONTROL SEMICOLON
    &kp Z                &kp X            &kp C                &kp V              &kp B         &kp N            &kp M               &kp COMMA             &kp DOT           &kp FSLH
                                              &kp DELETE           &lt SYM TAB          &hmd C_AC_NEXT_KEYBOARD_LAYOUT_SELECT ESCAPE    &lt MED ENTER  &lt NUM SPACE  &lt CZE BACKSPACE
)

ZMK_LAYER(num_layer,
    ___                         ___                     ___                         ___                       ___             ___           ___                        ___                          ___                      ___
    &hmd LEFT_CONTROL KP_NUMBER_1  &hmd LEFT_ALT KP_NUMBER_2  &hmd LEFT_COMMAND KP_NUMBER_3  &smd LEFT_SHIFT KP_NUMBER_4  &kp KP_NUMBER_5    &kp KP_NUMBER_6  &smd RIGHT_SHIFT KP_NUMBER_7  &hmd RIGHT_COMMAND KP_NUMBER_8  &hmd RIGHT_ALT KP_NUMBER_9  &hmd RIGHT_CONTROL KP_NUMBER_0
    ___                         ___                     ___                         ___                       ___             ___           ___                        ___                          ___                      ___
                                                                  ___                         ___                       ___             ___           ___                        ___
)

ZMK_LAYER(sym_layer,
    ___                         ___            ___                  ___                  ___         ___     &kp GRAVE                   &kp ASTERISK                         &kp MINUS                         &kp EQUAL
    &hmd LEFT_CONTROL EXCLAMATION  &hmd LEFT_ALT AT  &hmd LEFT_COMMAND HASH  &smd LEFT_SHIFT DOLLAR  &kp PERCENT    &kp CARET  &smd RIGHT_SHIFT AMPERSAND  &hmd RIGHT_COMMAND LEFT_PARENTHESIS  &hmd RIGHT_ALT RIGHT_PARENTHESIS  &hmd RIGHT_CONTROL APOSTROPHE
    ___                         ___            ___                  ___                  ___         ___     ___                      &kp LEFT_BRACKET                     &kp RIGHT_BRACKET                 &kp BACKSLASH
                                                                  ___                         ___                       ___             ___           ___                        ___
)

ZMK_LAYER(med_layer,
___            ___        ___            ___          ___    &kp C_PREVIOUS  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT       &kp C_MUTE
&kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_COMMAND  &kp LEFT_SHIFT  ___    &kp LEFT_ARROW  &kp DOWN_ARROW     &kp UP_ARROW     &kp RIGHT_ARROW  &kp C_PLAY_PAUSE
___            ___        ___            ___          ___    &kp HOME        &kp PAGE_DOWN      &kp PAGE_UP      &kp END          &kp F12
                                                                  ___                         ___                       ___             ___           ___                        ___
)

ZMK_LAYER(fun_layer,
&kp F11  &kp F12  ___  ___  ___     &bt BT_CLR    ___        ___        ___       ___
&kp F1   &kp F2   &kp F3  &kp F4  &kp F5     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&kp F6   &kp F7   &kp F8  &kp F9  &kp F10    ___        ___        ___        ___       ___ 
                                                                  ___                         ___                       ___             ___           ___                        ___
)

ZMK_LAYER(cze_layer,
___  &cs_ea  &cs_ec  &cs_rc  &cs_tc  &cs_ya  &cs_ur  &cs_ia  &cs_oa  ___
&cs_aa  &cs_sc  &cs_dc  ___  ___  ___  &cs_ua  ___  ___  ___
&cs_zc  ___  &cs_cc  ___  ___  &cs_nc  ___  ___  ___  ___
                                                                  ___                         ___                       ___             ___           ___                        ___
)